{
  "last-round": 4,
  "txn-groups": [
    {
      "txn-results": [
        {
          "txn-result": {
            "pool-error": "",
            "txn": {
              "txn": {
                "apaa": [
                  "bgATlw=="
                ],
                "apid": 1003,
                "fee": 1000,
                "fv": 4,
                "gen": "dockernet-v1",
                "gh": "wsqaKsUkASte1utYzTX90Vywx5mK7LO3zTdpncUnWQo=",
                "lv": 1004,
                "snd": "CKHxa8aQsctnApbuRSLoKLtZVDm8aTigUPrkkki1qpE=",
                "type": "appl"
              }
            }
          },
          "app-budget-consumed": 50,
          "exec-trace": {
            "approval-program-hash": "/1YYloSOeD75mgsE9MpP7PR+8aflsjlBzhq9tYYlh9c=",
            "approval-program-trace": [
              {
                "pc": 1
              },
              {
                "pc": 7
              },
              {
                "pc": 59,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1003
                  }
                ]
              },
              {
                "pc": 61,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 62,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 6
                  }
                ]
              },
              {
                "pc": 64,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 65,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ]
              },
              {
                "pc": 67,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 68,
                "stack-pop-count": 1
              },
              {
                "pc": 864,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "bgATlw=="
                  }
                ]
              },
              {
                "pc": 870,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "8p/e7A=="
                  }
                ]
              },
              {
                "pc": 876,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "MisBlw=="
                  }
                ]
              },
              {
                "pc": 882,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "8iLzsw=="
                  }
                ]
              },
              {
                "pc": 888,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "j0eSGw=="
                  }
                ]
              },
              {
                "pc": 894,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "lTmB0g=="
                  }
                ]
              },
              {
                "pc": 900,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "WdmzTA=="
                  }
                ]
              },
              {
                "pc": 906,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "PGWGWA=="
                  }
                ]
              },
              {
                "pc": 912,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "bgATlw=="
                  }
                ]
              },
              {
                "pc": 915,
                "stack-pop-count": 9
              },
              {
                "pc": 152,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "FR98dQ=="
                  }
                ]
              },
              {
                "pc": 153
              },
              {
                "pc": 161
              },
              {
                "pc": 164,
                "stack-additions": [
                  {
                    "type": 1
                  }
                ]
              },
              {
                "pc": 165
              },
              {
                "pc": 138
              },
              {
                "pc": 141,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1003
                  }
                ]
              },
              {
                "pc": 144,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "CKHxa8aQsctnApbuRSLoKLtZVDm8aTigUPrkkki1qpE="
                  },
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 1
              },
              {
                "pc": 146,
                "stack-pop-count": 1
              },
              {
                "pc": 147,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "CKHxa8aQsctnApbuRSLoKLtZVDm8aTigUPrkkki1qpE="
                  }
                ]
              },
              {
                "pc": 149,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 1
                  }
                ],
                "stack-pop-count": 2
              },
              {
                "pc": 150,
                "stack-pop-count": 1
              },
              {
                "pc": 151
              },
              {
                "pc": 168
              },
              {
                "pc": 169,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 3
                  }
                ]
              },
              {
                "pc": 171,
                "stack-pop-count": 1
              },
              {
                "pc": 173,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "TWF0aGFr"
                  }
                ]
              },
              {
                "pc": 181,
                "stack-pop-count": 1
              },
              {
                "pc": 183,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "TUFL"
                  }
                ]
              },
              {
                "pc": 188,
                "stack-pop-count": 1
              },
              {
                "pc": 190,
                "stack-additions": [
                  {
                    "type": 2,
                    "uint": 100000
                  }
                ]
              },
              {
                "pc": 194,
                "stack-pop-count": 1
              },
              {
                "pc": 196,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ]
              },
              {
                "pc": 197,
                "stack-pop-count": 1
              },
              {
                "pc": 199,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "K9SfqHv4CIDtifWuS6UZPwYBLC0UevbSESUswWsLRYo="
                  }
                ]
              },
              {
                "pc": 201,
                "stack-pop-count": 1
              },
              {
                "pc": 203,
                "stack-additions": [
                  {
                    "type": 1,
                    "bytes": "K9SfqHv4CIDtifWuS6UZPwYBLC0UevbSESUswWsLRYo="
                  }
                ]
              },
              {
                "pc": 205,
                "stack-pop-count": 1
              },
              {
                "pc": 207,
                "stack-additions": [
                  {
                    "type": 2
                  }
                ]
              },
              {
                "pc": 208,
                "stack-pop-count": 1
              },
              {
                "pc": 210
              }
            ]
          }
        }
      ],
      "app-budget-added": 700,
      "app-budget-consumed": 50,
      "failed-at": [
        0
      ],
      "failure-message": "transaction 7BZH25YCULCVHZZ36VIZXLA2A75E5XGIAWD55QBEBM5IOFZIN3OQ: logic eval error: fee too small []transactions.SignedTxnWithAD{transactions.SignedTxnWithAD{_struct:struct {}{}, SignedTxn:transactions.SignedTxn{_struct:struct {}{}, Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Lsig:transactions.LogicSig{_struct:struct {}{}, Logic:[]uint8(nil), Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Args:[][]uint8(nil)}, Txn:transactions.Transaction{_struct:struct {}{}, Type:\"acfg\", Header:transactions.Header{_struct:struct {}{}, Sender:basics.Address{0x2b, 0xd4, 0x9f, 0xa8, 0x7b, 0xf8, 0x8, 0x80, 0xed, 0x89, 0xf5, 0xae, 0x4b, 0xa5, 0x19, 0x3f, 0x6, 0x1, 0x2c, 0x2d, 0x14, 0x7a, 0xf6, 0xd2, 0x11, 0x25, 0x2c, 0xc1, 0x6b, 0xb, 0x45, 0x8a}, Fee:basics.MicroAlgos{Raw:0x0}, FirstValid:0x4, LastValid:0x3ec, Note:[]uint8(nil), GenesisID:\"\", GenesisHash:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Group:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Lease:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, RekeyTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, KeyregTxnFields:transactions.KeyregTxnFields{_struct:struct {}{}, VotePK:crypto.OneTimeSignatureVerifier{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, SelectionPK:crypto.VrfPubkey{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, StateProofPK:merklesignature.Commitment{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, VoteFirst:0x0, VoteLast:0x0, VoteKeyDilution:0x0, Nonparticipation:false}, PaymentTxnFields:transactions.PaymentTxnFields{_struct:struct {}{}, Receiver:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Amount:basics.MicroAlgos{Raw:0x0}, CloseRemainderTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetConfigTxnFields:transactions.AssetConfigTxnFields{_struct:struct {}{}, ConfigAsset:0x0, AssetParams:basics.AssetParams{_struct:struct {}{}, Total:0x186a0, Decimals:0x0, DefaultFrozen:false, UnitName:\"MAK\", AssetName:\"Mathak\", URL:\"\", MetadataHash:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Manager:basics.Address{0x2b, 0xd4, 0x9f, 0xa8, 0x7b, 0xf8, 0x8, 0x80, 0xed, 0x89, 0xf5, 0xae, 0x4b, 0xa5, 0x19, 0x3f, 0x6, 0x1, 0x2c, 0x2d, 0x14, 0x7a, 0xf6, 0xd2, 0x11, 0x25, 0x2c, 0xc1, 0x6b, 0xb, 0x45, 0x8a}, Reserve:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Freeze:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Clawback:basics.Address{0x2b, 0xd4, 0x9f, 0xa8, 0x7b, 0xf8, 0x8, 0x80, 0xed, 0x89, 0xf5, 0xae, 0x4b, 0xa5, 0x19, 0x3f, 0x6, 0x1, 0x2c, 0x2d, 0x14, 0x7a, 0xf6, 0xd2, 0x11, 0x25, 0x2c, 0xc1, 0x6b, 0xb, 0x45, 0x8a}}}, AssetTransferTxnFields:transactions.AssetTransferTxnFields{_struct:struct {}{}, XferAsset:0x0, AssetAmount:0x0, AssetSender:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, AssetReceiver:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, AssetCloseTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetFreezeTxnFields:transactions.AssetFreezeTxnFields{_struct:struct {}{}, FreezeAccount:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, FreezeAsset:0x0, AssetFrozen:false}, ApplicationCallTxnFields:transactions.ApplicationCallTxnFields{_struct:struct {}{}, ApplicationID:0x0, OnCompletion:0x0, ApplicationArgs:[][]uint8(nil), Accounts:[]basics.Address(nil), ForeignApps:[]basics.AppIndex(nil), Boxes:[]transactions.BoxRef(nil), ForeignAssets:[]basics.AssetIndex(nil), LocalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, GlobalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, ApprovalProgram:[]uint8(nil), ClearStateProgram:[]uint8(nil), ExtraProgramPages:0x0}, StateProofTxnFields:transactions.StateProofTxnFields{_struct:struct {}{}, StateProofType:0x0, StateProof:stateproof.StateProof{_struct:struct {}{}, SigCommit:crypto.GenericDigest(nil), SignedWeight:0x0, SigProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, PartProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, MerkleSignatureSaltVersion:0x0, Reveals:map[uint64]stateproof.Reveal(nil), PositionsToReveal:[]uint64(nil)}, Message:stateproofmsg.Message{_struct:struct {}{}, BlockHeadersCommitment:[]uint8(nil), VotersCommitment:[]uint8(nil), LnProvenWeight:0x0, FirstAttestedRound:0x0, LastAttestedRound:0x0}}}, AuthAddr:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, ApplyData:transactions.ApplyData{_struct:struct {}{}, ClosingAmount:basics.MicroAlgos{Raw:0x0}, AssetClosingAmount:0x0, SenderRewards:basics.MicroAlgos{Raw:0x0}, ReceiverRewards:basics.MicroAlgos{Raw:0x0}, CloseRewards:basics.MicroAlgos{Raw:0x0}, EvalDelta:transactions.EvalDelta{_struct:struct {}{}, GlobalDelta:basics.StateDelta(nil), LocalDeltas:map[uint64]basics.StateDelta(nil), SharedAccts:[]basics.Address(nil), Logs:[]string(nil), InnerTxns:[]transactions.SignedTxnWithAD(nil)}, ConfigAsset:0x0, ApplicationID:0x0}}}. Details: app=1003, pc=210, opcodes=intc_1 // 0; itxn_field Fee; itxn_submit"
    }
  ],
  "version": 2,
  "eval-overrides": {
    "allow-empty-signatures": true,
    "max-log-calls": 2048,
    "max-log-size": 65536
  },
  "exec-trace-config": {
    "enable": true,
    "scratch-change": true,
    "stack-change": true,
    "state-change": true
  },
  "initial-states": {}
}