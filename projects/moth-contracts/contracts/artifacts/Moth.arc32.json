{
  "hints": {
    "createApplication(uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "CreateAsa()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "OptIn(axfer)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "CheckOptedIn()bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "Gateway(pay,address,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "GetMBR(pay)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "CreateProfile(pay,string,string,string,string,bool,uint64)(string,string,string,string,bool,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "EditProfile(string,string,string,string,bool,uint64)(string,string,string,string,bool,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "GetContractFee()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getProfile(address)(string,string,string,string,bool,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "defultPercentage": {
          "type": "uint64",
          "key": "defultPercentage"
        },
        "contractFee": {
          "type": "uint64",
          "key": "contractFee"
        },
        "royaltyPointToken": {
          "type": "uint64",
          "key": "royaltyPointToken"
        },
        "contractBalance": {
          "type": "uint64",
          "key": "contractBalance"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjkyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQpdm9pZAoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJLy8gc2l0ZUZlZTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gZGVmdWx0UGVyY2VudGFnZTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBjcmVhdGVBcHBsaWNhdGlvbih1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludCAxCglyZXR1cm4KCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKGRlZnVsdFBlcmNlbnRhZ2U6IHVpbnQ2NCwgc2l0ZUZlZTogdWludDY0KTogdm9pZApjcmVhdGVBcHBsaWNhdGlvbjoKCXByb3RvIDIgMAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MjYKCS8vIHRoaXMuZGVmdWx0UGVyY2VudGFnZS52YWx1ZSA9IGRlZnVsdFBlcmNlbnRhZ2UKCWJ5dGUgMHg2NDY1NjY3NTZjNzQ1MDY1NzI2MzY1NmU3NDYxNjc2NSAvLyAiZGVmdWx0UGVyY2VudGFnZSIKCWZyYW1lX2RpZyAtMSAvLyBkZWZ1bHRQZXJjZW50YWdlOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoyNwoJLy8gdGhpcy5jb250cmFjdEZlZS52YWx1ZSA9IHNpdGVGZWUKCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NDY2NTY1IC8vICJjb250cmFjdEZlZSIKCWZyYW1lX2RpZyAtMiAvLyBzaXRlRmVlOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIE9ubHlDcmVhdG9yKCk6IHZvaWQKLy8KLy8gRW5zdXJlIHRoZSBjYWxsZXIgaXMgYXBwIGNyZWF0b3IKT25seUNyZWF0b3I6Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjMyCgkvLyBhc3NlcnQodGhpcy5hcHAuY3JlYXRvciA9PT0gdGhpcy50eG4uc2VuZGVyKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYXBwX3BhcmFtc19nZXQgQXBwQ3JlYXRvcgoJcG9wCgl0eG4gU2VuZGVyCgk9PQoJYXNzZXJ0CglyZXRzdWIKCi8vIENyZWF0ZUFzYSgpdWludDY0CiphYmlfcm91dGVfQ3JlYXRlQXNhOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIENyZWF0ZUFzYSgpdWludDY0CgljYWxsc3ViIENyZWF0ZUFzYQoJaXRvYgoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIENyZWF0ZUFzYSgpOiBBc3NldElECkNyZWF0ZUFzYToKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czozNgoJLy8gdGhpcy5Pbmx5Q3JlYXRvcigpCgljYWxsc3ViIE9ubHlDcmVhdG9yCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czozOAoJLy8gY3JlYXRlQXNzZXQgPSBzZW5kQXNzZXRDcmVhdGlvbih7CgkvLyAgICAgICBjb25maWdBc3NldE5hbWU6ICdNYXRoYWsnLAoJLy8gICAgICAgY29uZmlnQXNzZXRVbml0TmFtZTogJ01BSycsCgkvLyAgICAgICBjb25maWdBc3NldFRvdGFsOiAxMDAwMDAsCgkvLyAgICAgICBjb25maWdBc3NldERlY2ltYWxzOiAwLAoJLy8gICAgICAgY29uZmlnQXNzZXRDbGF3YmFjazogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIGNvbmZpZ0Fzc2V0TWFuYWdlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFjZmcKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjM5CgkvLyBjb25maWdBc3NldE5hbWU6ICdNYXRoYWsnCglieXRlIDB4NGQ2MTc0Njg2MTZiIC8vICJNYXRoYWsiCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TmFtZQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NDAKCS8vIGNvbmZpZ0Fzc2V0VW5pdE5hbWU6ICdNQUsnCglieXRlIDB4NGQ0MTRiIC8vICJNQUsiCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VW5pdE5hbWUKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjQxCgkvLyBjb25maWdBc3NldFRvdGFsOiAxMDAwMDAKCWludCAxMDAwMDAKCWl0eG5fZmllbGQgQ29uZmlnQXNzZXRUb3RhbAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NDIKCS8vIGNvbmZpZ0Fzc2V0RGVjaW1hbHM6IDAKCWludCAwCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RGVjaW1hbHMKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjQzCgkvLyBjb25maWdBc3NldENsYXdiYWNrOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBDb25maWdBc3NldENsYXdiYWNrCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo0NAoJLy8gY29uZmlnQXNzZXRNYW5hZ2VyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBDb25maWdBc3NldE1hbmFnZXIKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnQgMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CglpdHhuIENyZWF0ZWRBc3NldElECglmcmFtZV9idXJ5IDAgLy8gY3JlYXRlQXNzZXQ6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NDcKCS8vIHRoaXMucm95YWx0eVBvaW50VG9rZW4udmFsdWUgPSBjcmVhdGVBc3NldAoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJZnJhbWVfZGlnIDAgLy8gY3JlYXRlQXNzZXQ6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjQ5CgkvLyByZXR1cm4gY3JlYXRlQXNzZXQ7CglmcmFtZV9kaWcgMCAvLyBjcmVhdGVBc3NldDogdWludDY0CgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCi8vIE9wdEluKGF4ZmVyKWJvb2wKKmFiaV9yb3V0ZV9PcHRJbjoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gb3B0SW5UeG46IGF4ZmVyCgl0eG4gR3JvdXBJbmRleAoJaW50IDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludCBheGZlcgoJPT0KCgkvLyBhcmd1bWVudCAwIChvcHRJblR4bikgZm9yIE9wdEluIG11c3QgYmUgYSBheGZlciB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBPcHRJbihheGZlcilib29sCgljYWxsc3ViIE9wdEluCglieXRlIDB4MDAKCWludCAwCgl1bmNvdmVyIDIKCXNldGJpdAoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIE9wdEluKG9wdEluVHhuOiBBc3NldFRyYW5zZmVyVHhuKTogYm9vbGVhbgpPcHRJbjoKCXByb3RvIDEgMQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NTMKCS8vIGFzc2VydCh0aGlzLnJveWFsdHlQb2ludFRva2VuLmV4aXN0cykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg3MjZmNzk2MTZjNzQ3OTUwNmY2OTZlNzQ1NDZmNmI2NTZlIC8vICJyb3lhbHR5UG9pbnRUb2tlbiIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NTUKCS8vIHZlcmlmeUFzc2V0VHJhbnNmZXJUeG4ob3B0SW5UeG4sIHsKCS8vICAgICAgIHNlbmRlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgeGZlckFzc2V0OiB0aGlzLnJveWFsdHlQb2ludFRva2VuLnZhbHVlLAoJLy8gICAgICAgYXNzZXRBbW91bnQ6IDAsCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgfSkKCS8vIHZlcmlmeSBzZW5kZXIKCWZyYW1lX2RpZyAtMSAvLyBvcHRJblR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgU2VuZGVyCgl0eG4gU2VuZGVyCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoib3B0SW5UeG4iLCJmaWVsZCI6InNlbmRlciIsImV4cGVjdGVkIjoidGhpcy50eG4uc2VuZGVyIn0KCWFzc2VydAoKCS8vIHZlcmlmeSB4ZmVyQXNzZXQKCWZyYW1lX2RpZyAtMSAvLyBvcHRJblR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgWGZlckFzc2V0CglieXRlIDB4NzI2Zjc5NjE2Yzc0Nzk1MDZmNjk2ZTc0NTQ2ZjZiNjU2ZSAvLyAicm95YWx0eVBvaW50VG9rZW4iCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6Im9wdEluVHhuIiwiZmllbGQiOiJ4ZmVyQXNzZXQiLCJleHBlY3RlZCI6InRoaXMucm95YWx0eVBvaW50VG9rZW4udmFsdWUifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IGFzc2V0QW1vdW50CglmcmFtZV9kaWcgLTEgLy8gb3B0SW5UeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CglpbnQgMAoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6Im9wdEluVHhuIiwiZmllbGQiOiJhc3NldEFtb3VudCIsImV4cGVjdGVkIjoiMCJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYXNzZXRSZWNlaXZlcgoJZnJhbWVfZGlnIC0xIC8vIG9wdEluVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldFJlY2VpdmVyCgl0eG4gU2VuZGVyCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoib3B0SW5UeG4iLCJmaWVsZCI6ImFzc2V0UmVjZWl2ZXIiLCJleHBlY3RlZCI6InRoaXMudHhuLnNlbmRlciJ9Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjYyCgkvLyByZXR1cm4gdGhpcy50eG4uc2VuZGVyLmlzT3B0ZWRJblRvQXNzZXQodGhpcy5yb3lhbHR5UG9pbnRUb2tlbi52YWx1ZSk7Cgl0eG4gU2VuZGVyCglieXRlIDB4NzI2Zjc5NjE2Yzc0Nzk1MDZmNjk2ZTc0NTQ2ZjZiNjU2ZSAvLyAicm95YWx0eVBvaW50VG9rZW4iCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglzd2FwCglwb3AKCXJldHN1YgoKLy8gQ2hlY2tPcHRlZEluKClib29sCiphYmlfcm91dGVfQ2hlY2tPcHRlZEluOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIENoZWNrT3B0ZWRJbigpYm9vbAoJY2FsbHN1YiBDaGVja09wdGVkSW4KCWJ5dGUgMHgwMAoJaW50IDAKCXVuY292ZXIgMgoJc2V0Yml0Cgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gQ2hlY2tPcHRlZEluKCk6IGJvb2xlYW4KQ2hlY2tPcHRlZEluOgoJcHJvdG8gMCAxCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo2NgoJLy8gcmV0dXJuIHRoaXMudHhuLnNlbmRlci5pc09wdGVkSW5Ub0Fzc2V0KHRoaXMucm95YWx0eVBvaW50VG9rZW4udmFsdWUpOwoJdHhuIFNlbmRlcgoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJc3dhcAoJcG9wCglyZXRzdWIKCi8vIEdhdGV3YXkocGF5LGFkZHJlc3MsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9HYXRld2F5OgoJLy8gYW1vdW50OiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCgkvLyB0b0FkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMSAodG9BZGRyZXNzKSBmb3IgR2F0ZXdheSBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gcGF5bWVudDogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50IDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludCBwYXkKCT09CgoJLy8gYXJndW1lbnQgMiAocGF5bWVudCkgZm9yIEdhdGV3YXkgbXVzdCBiZSBhIHBheSB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBHYXRld2F5KHBheSxhZGRyZXNzLHVpbnQ2NCl2b2lkCgljYWxsc3ViIEdhdGV3YXkKCWludCAxCglyZXR1cm4KCi8vIEdhdGV3YXkocGF5bWVudDogUGF5VHhuLCB0b0FkZHJlc3M6IEFkZHJlc3MsIGFtb3VudDogdWludDY0KTogdm9pZApHYXRld2F5OgoJcHJvdG8gMyAwCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo3MAoJLy8gYXNzZXJ0KHRoaXMucm95YWx0eVBvaW50VG9rZW4uZXhpc3RzKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXRfZXgKCXN3YXAKCXBvcAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo3MQoJLy8gYXNzZXJ0KHRoaXMucHJvZmlsZXModG9BZGRyZXNzKS5leGlzdHMpCglmcmFtZV9kaWcgLTIgLy8gdG9BZGRyZXNzOiBBZGRyZXNzCglib3hfbGVuCglzd2FwCglwb3AKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NzIKCS8vIHRoaXMudHhuLnNlbmRlci5pc09wdGVkSW5Ub0Fzc2V0KHRoaXMucm95YWx0eVBvaW50VG9rZW4udmFsdWUpCgl0eG4gU2VuZGVyCglieXRlIDB4NzI2Zjc5NjE2Yzc0Nzk1MDZmNjk2ZTc0NTQ2ZjZiNjU2ZSAvLyAicm95YWx0eVBvaW50VG9rZW4iCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglzd2FwCglwb3AKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjc0CgkvLyB2ZXJpZnlUeG4ocGF5bWVudCwgewoJLy8gICAgICAgYW1vdW50OiBhbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICB9KQoJLy8gdmVyaWZ5IGFtb3VudAoJZnJhbWVfZGlnIC0xIC8vIHBheW1lbnQ6IFBheVR4bgoJZ3R4bnMgQW1vdW50CglmcmFtZV9kaWcgLTMgLy8gYW1vdW50OiB1aW50NjQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJwYXltZW50IiwiZmllbGQiOiJhbW91bnQiLCJleHBlY3RlZCI6ImFtb3VudCJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgcmVjZWl2ZXIKCWZyYW1lX2RpZyAtMSAvLyBwYXltZW50OiBQYXlUeG4KCWd0eG5zIFJlY2VpdmVyCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InBheW1lbnQiLCJmaWVsZCI6InJlY2VpdmVyIiwiZXhwZWN0ZWQiOiJ0aGlzLmFwcC5hZGRyZXNzIn0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NzkKCS8vIHNlbmRQYXltZW50KHsKCS8vICAgICAgIGFtb3VudDogYW1vdW50LAoJLy8gICAgICAgcmVjZWl2ZXI6IHRvQWRkcmVzcywKCS8vICAgICAgIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IHBheQoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODAKCS8vIGFtb3VudDogYW1vdW50CglmcmFtZV9kaWcgLTMgLy8gYW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo4MQoJLy8gcmVjZWl2ZXI6IHRvQWRkcmVzcwoJZnJhbWVfZGlnIC0yIC8vIHRvQWRkcmVzczogQWRkcmVzcwoJaXR4bl9maWVsZCBSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODIKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODUKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgIHhmZXJBc3NldDogdGhpcy5yb3lhbHR5UG9pbnRUb2tlbi52YWx1ZSwKCS8vICAgICAgIGFzc2V0QW1vdW50OiBhbW91bnQgLyAxMDAsCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODYKCS8vIHhmZXJBc3NldDogdGhpcy5yb3lhbHR5UG9pbnRUb2tlbi52YWx1ZQoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo4NwoJLy8gYXNzZXRBbW91bnQ6IGFtb3VudCAvIDEwMAoJZnJhbWVfZGlnIC0zIC8vIGFtb3VudDogdWludDY0CglpbnQgMTAwCgkvCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo4OAoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjg5CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCXJldHN1YgoKLy8gR2V0TUJSKHBheSl1aW50NjQKKmFiaV9yb3V0ZV9HZXRNQlI6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIGJveE1CUlBheW1lbnQ6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnQgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKGJveE1CUlBheW1lbnQpIGZvciBHZXRNQlIgbXVzdCBiZSBhIHBheSB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBHZXRNQlIocGF5KXVpbnQ2NAoJY2FsbHN1YiBHZXRNQlIKCWl0b2IKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBHZXRNQlIoYm94TUJSUGF5bWVudDogUGF5VHhuKTogdWludDY0CkdldE1CUjoKCXByb3RvIDEgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CglkdXAKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjk1CgkvLyBwcmVBcHBNQlIgPSB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCXBvcAoJZnJhbWVfYnVyeSAwIC8vIHByZUFwcE1CUjogdWludDY0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo5NgoJLy8gdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlID0gewoJLy8gICAgICAgdGl0bGU6ICdzdHJpbmcnLAoJLy8gICAgICAgbG9nbzogJ3N0cmluZycsCgkvLyAgICAgICBkZXNjcmlwdGlvbjogJ3N0cmluZycsCgkvLyAgICAgICB1cmw6ICdzdHJpbmcnLAoJLy8gICAgICAgbG95YWx0eUVuYWJsZWQ6IHRydWUsCgkvLyAgICAgICBsb3lhbHR5UGVyY2VudGFnZTogMTAwMCwKCS8vICAgICB9Cgl0eG4gU2VuZGVyCglkdXAKCWJveF9kZWwKCXBvcAoJYnl0ZSAweCAvLyBpbml0aWFsIGhlYWQKCWJ5dGUgMHggLy8gaW5pdGlhbCB0YWlsCglieXRlIDB4MDAxMSAvLyBpbml0aWFsIGhlYWQgb2Zmc2V0CglieXRlIDB4MDAwNjczNzQ3MjY5NmU2NwoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWJ5dGUgMHgwMDA2NzM3NDcyNjk2ZTY3CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJYnl0ZSAweDAwMDY3Mzc0NzI2OTZlNjcKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglieXRlIDB4MDAwNjczNzQ3MjY5NmU2NwoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWJ5dGUgMHgwMAoJaW50IDAKCWludCAxCglzZXRiaXQKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwM2U4CgljYWxsc3ViICpwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWJveF9wdXQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjEwNAoJLy8gTWJyID0gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlIC0gcHJlQXBwTUJSCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglwb3AKCWZyYW1lX2RpZyAwIC8vIHByZUFwcE1CUjogdWludDY0CgktCglmcmFtZV9idXJ5IDEgLy8gTWJyOiB1aW50NjQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjEwNQoJLy8gdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLmRlbGV0ZSgpCgl0eG4gU2VuZGVyCglib3hfZGVsCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxMDYKCS8vIHJldHVybiBNYnI7CglmcmFtZV9kaWcgMSAvLyBNYnI6IHVpbnQ2NAoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoKCS8vIHBvcCBhbGwgbG9jYWwgdmFyaWFibGVzIGZyb20gdGhlIHN0YWNrCglwb3BuIDEKCXJldHN1YgoKLy8gQ3JlYXRlUHJvZmlsZShwYXksc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KShzdHJpbmcsc3RyaW5nLHN0cmluZyxzdHJpbmcsYm9vbCx1aW50NjQpCiphYmlfcm91dGVfQ3JlYXRlUHJvZmlsZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gbG95YWx0eVBlcmNlbnRhZ2U6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNgoJYnRvaQoKCS8vIGxveWFsdHlFbmFibGVkOiBib29sCgl0eG5hIEFwcGxpY2F0aW9uQXJncyA1CglkdXAKCWxlbgoJaW50IDEKCT09CgoJLy8gYXJndW1lbnQgMSAobG95YWx0eUVuYWJsZWQpIGZvciBDcmVhdGVQcm9maWxlIG11c3QgYmUgYSBib29sCglhc3NlcnQKCWludCAwCglnZXRiaXQKCgkvLyB1cmw6IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNAoJZXh0cmFjdCAyIDAKCgkvLyBkZXNjcmlwdGlvbjogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglleHRyYWN0IDIgMAoKCS8vIGxvZ286IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZXh0cmFjdCAyIDAKCgkvLyB0aXRsZTogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglleHRyYWN0IDIgMAoKCS8vIGJveE1CUlBheW1lbnQ6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnQgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDYgKGJveE1CUlBheW1lbnQpIGZvciBDcmVhdGVQcm9maWxlIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgQ3JlYXRlUHJvZmlsZShwYXksc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KShzdHJpbmcsc3RyaW5nLHN0cmluZyxzdHJpbmcsYm9vbCx1aW50NjQpCgljYWxsc3ViIENyZWF0ZVByb2ZpbGUKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBDcmVhdGVQcm9maWxlKGJveE1CUlBheW1lbnQ6IFBheVR4biwgdGl0bGU6IHN0cmluZywgbG9nbzogc3RyaW5nLCBkZXNjcmlwdGlvbjogc3RyaW5nLCB1cmw6IHN0cmluZywgbG95YWx0eUVuYWJsZWQ6IGJvb2xlYW4sIGxveWFsdHlQZXJjZW50YWdlOiB1aW50NjQpOiBwcm9maWxlCkNyZWF0ZVByb2ZpbGU6Cglwcm90byA3IDEKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjExOQoJLy8gdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlID0gewoJLy8gICAgICAgdGl0bGU6IHRpdGxlLAoJLy8gICAgICAgbG9nbzogbG9nbywKCS8vICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKCS8vICAgICAgIHVybDogdXJsLAoJLy8gICAgICAgbG95YWx0eUVuYWJsZWQ6IGxveWFsdHlFbmFibGVkLAoJLy8gICAgICAgbG95YWx0eVBlcmNlbnRhZ2U6IGxveWFsdHlQZXJjZW50YWdlLAoJLy8gICAgIH0KCXR4biBTZW5kZXIKCWR1cAoJYm94X2RlbAoJcG9wCglieXRlIDB4IC8vIGluaXRpYWwgaGVhZAoJYnl0ZSAweCAvLyBpbml0aWFsIHRhaWwKCWJ5dGUgMHgwMDExIC8vIGluaXRpYWwgaGVhZCBvZmZzZXQKCWZyYW1lX2RpZyAtMiAvLyB0aXRsZTogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtMyAvLyBsb2dvOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJZnJhbWVfZGlnIC00IC8vIGRlc2NyaXB0aW9uOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJZnJhbWVfZGlnIC01IC8vIHVybDogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWJ5dGUgMHgwMAoJaW50IDAKCWZyYW1lX2RpZyAtNiAvLyBsb3lhbHR5RW5hYmxlZDogYm9vbGVhbgoJc2V0Yml0CgljYWxsc3ViICpwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTcgLy8gbG95YWx0eVBlcmNlbnRhZ2U6IHVpbnQ2NAoJaXRvYgoJY2FsbHN1YiAqcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudAoJcG9wIC8vIHBvcCBoZWFkIG9mZnNldAoJY29uY2F0IC8vIGNvbmNhdCBoZWFkIGFuZCB0YWlsCglib3hfcHV0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxMzMKCS8vIHJldHVybiB0aGlzLnByb2ZpbGVzKHRoaXMudHhuLnNlbmRlcikudmFsdWU7Cgl0eG4gU2VuZGVyCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLnByb2ZpbGVzKHRoaXMudHhuLnNlbmRlcikudmFsdWUKCWFzc2VydAoJcmV0c3ViCgovLyBFZGl0UHJvZmlsZShzdHJpbmcsc3RyaW5nLHN0cmluZyxzdHJpbmcsYm9vbCx1aW50NjQpKHN0cmluZyxzdHJpbmcsc3RyaW5nLHN0cmluZyxib29sLHVpbnQ2NCkKKmFiaV9yb3V0ZV9FZGl0UHJvZmlsZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gbG95YWx0eVBlcmNlbnRhZ2U6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNgoJYnRvaQoKCS8vIGxveWFsdHlFbmFibGVkOiBib29sCgl0eG5hIEFwcGxpY2F0aW9uQXJncyA1CglkdXAKCWxlbgoJaW50IDEKCT09CgoJLy8gYXJndW1lbnQgMSAobG95YWx0eUVuYWJsZWQpIGZvciBFZGl0UHJvZmlsZSBtdXN0IGJlIGEgYm9vbAoJYXNzZXJ0CglpbnQgMAoJZ2V0Yml0CgoJLy8gdXJsOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDQKCWV4dHJhY3QgMiAwCgoJLy8gZGVzY3JpcHRpb246IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJZXh0cmFjdCAyIDAKCgkvLyBsb2dvOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWV4dHJhY3QgMiAwCgoJLy8gdGl0bGU6IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZXh0cmFjdCAyIDAKCgkvLyBleGVjdXRlIEVkaXRQcm9maWxlKHN0cmluZyxzdHJpbmcsc3RyaW5nLHN0cmluZyxib29sLHVpbnQ2NCkoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KQoJY2FsbHN1YiBFZGl0UHJvZmlsZQoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIEVkaXRQcm9maWxlKHRpdGxlOiBzdHJpbmcsIGxvZ286IHN0cmluZywgZGVzY3JpcHRpb246IHN0cmluZywgdXJsOiBzdHJpbmcsIGxveWFsdHlFbmFibGVkOiBib29sZWFuLCBsb3lhbHR5UGVyY2VudGFnZTogdWludDY0KTogcHJvZmlsZQpFZGl0UHJvZmlsZToKCXByb3RvIDYgMQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTQ0CgkvLyBhc3NlcnQodGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLmV4aXN0cykKCXR4biBTZW5kZXIKCWJveF9sZW4KCXN3YXAKCXBvcAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxNDUKCS8vIHRoaXMucHJvZmlsZXModGhpcy50eG4uc2VuZGVyKS52YWx1ZSA9IHsKCS8vICAgICAgIHRpdGxlOiB0aXRsZSwKCS8vICAgICAgIGxvZ286IGxvZ28sCgkvLyAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sCgkvLyAgICAgICB1cmw6IHVybCwKCS8vICAgICAgIGxveWFsdHlFbmFibGVkOiBsb3lhbHR5RW5hYmxlZCwKCS8vICAgICAgIGxveWFsdHlQZXJjZW50YWdlOiBsb3lhbHR5UGVyY2VudGFnZSwKCS8vICAgICB9Cgl0eG4gU2VuZGVyCglkdXAKCWJveF9kZWwKCXBvcAoJYnl0ZSAweCAvLyBpbml0aWFsIGhlYWQKCWJ5dGUgMHggLy8gaW5pdGlhbCB0YWlsCglieXRlIDB4MDAxMSAvLyBpbml0aWFsIGhlYWQgb2Zmc2V0CglmcmFtZV9kaWcgLTEgLy8gdGl0bGU6IHN0cmluZwoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTIgLy8gbG9nbzogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtMyAvLyBkZXNjcmlwdGlvbjogc3RyaW5nCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtNCAvLyB1cmw6IHN0cmluZwoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglieXRlIDB4MDAKCWludCAwCglmcmFtZV9kaWcgLTUgLy8gbG95YWx0eUVuYWJsZWQ6IGJvb2xlYW4KCXNldGJpdAoJY2FsbHN1YiAqcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudAoJZnJhbWVfZGlnIC02IC8vIGxveWFsdHlQZXJjZW50YWdlOiB1aW50NjQKCWl0b2IKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXBvcCAvLyBwb3AgaGVhZCBvZmZzZXQKCWNvbmNhdCAvLyBjb25jYXQgaGVhZCBhbmQgdGFpbAoJYm94X3B1dAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTU0CgkvLyByZXR1cm4gdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlOwoJdHhuIFNlbmRlcgoJYm94X2dldAoKCS8vIGJveCB2YWx1ZSBkb2VzIG5vdCBleGlzdDogdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlCglhc3NlcnQKCXJldHN1YgoKLy8gR2V0Q29udHJhY3RGZWUoKXVpbnQ2NAoqYWJpX3JvdXRlX0dldENvbnRyYWN0RmVlOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIEdldENvbnRyYWN0RmVlKCl1aW50NjQKCWNhbGxzdWIgR2V0Q29udHJhY3RGZWUKCWl0b2IKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBHZXRDb250cmFjdEZlZSgpOiB1aW50NjQKR2V0Q29udHJhY3RGZWU6Cglwcm90byAwIDEKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjE1OAoJLy8gcmV0dXJuIHRoaXMuY29udHJhY3RGZWUudmFsdWU7CglieXRlIDB4NjM2ZjZlNzQ3MjYxNjM3NDQ2NjU2NSAvLyAiY29udHJhY3RGZWUiCglhcHBfZ2xvYmFsX2dldAoJcmV0c3ViCgovLyBnZXRQcm9maWxlKGFkZHJlc3MpKHN0cmluZyxzdHJpbmcsc3RyaW5nLHN0cmluZyxib29sLHVpbnQ2NCkKKmFiaV9yb3V0ZV9nZXRQcm9maWxlOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBhZGRyZXNzOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGFkZHJlc3MpIGZvciBnZXRQcm9maWxlIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGdldFByb2ZpbGUoYWRkcmVzcykoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KQoJY2FsbHN1YiBnZXRQcm9maWxlCgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gZ2V0UHJvZmlsZShhZGRyZXNzOiBBZGRyZXNzKTogcHJvZmlsZQpnZXRQcm9maWxlOgoJcHJvdG8gMSAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjE2MgoJLy8gYXNzZXJ0KHRoaXMucHJvZmlsZXMoYWRkcmVzcykuZXhpc3RzKQoJZnJhbWVfZGlnIC0xIC8vIGFkZHJlc3M6IEFkZHJlc3MKCWJveF9sZW4KCXN3YXAKCXBvcAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxNjMKCS8vIHZhbHVlcyA9IHRoaXMucHJvZmlsZXMoYWRkcmVzcykudmFsdWUKCWZyYW1lX2RpZyAtMSAvLyBhZGRyZXNzOiBBZGRyZXNzCglmcmFtZV9idXJ5IDAgLy8gc3RvcmFnZSBrZXkvL3ZhbHVlcwoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTY1CgkvLyByZXR1cm4gdmFsdWVzOwoJZnJhbWVfZGlnIDAgLy8gc3RvcmFnZSBrZXkvL3ZhbHVlcwoJYm94X2dldAoKCS8vIGJveCB2YWx1ZSBkb2VzIG5vdCBleGlzdDogdGhpcy5wcm9maWxlcyhhZGRyZXNzKS52YWx1ZQoJYXNzZXJ0CgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCipjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24odWludDY0LHVpbnQ2NCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJbWV0aG9kICJDcmVhdGVBc2EoKXVpbnQ2NCIKCW1ldGhvZCAiT3B0SW4oYXhmZXIpYm9vbCIKCW1ldGhvZCAiQ2hlY2tPcHRlZEluKClib29sIgoJbWV0aG9kICJHYXRld2F5KHBheSxhZGRyZXNzLHVpbnQ2NCl2b2lkIgoJbWV0aG9kICJHZXRNQlIocGF5KXVpbnQ2NCIKCW1ldGhvZCAiQ3JlYXRlUHJvZmlsZShwYXksc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KShzdHJpbmcsc3RyaW5nLHN0cmluZyxzdHJpbmcsYm9vbCx1aW50NjQpIgoJbWV0aG9kICJFZGl0UHJvZmlsZShzdHJpbmcsc3RyaW5nLHN0cmluZyxzdHJpbmcsYm9vbCx1aW50NjQpKHN0cmluZyxzdHJpbmcsc3RyaW5nLHN0cmluZyxib29sLHVpbnQ2NCkiCgltZXRob2QgIkdldENvbnRyYWN0RmVlKCl1aW50NjQiCgltZXRob2QgImdldFByb2ZpbGUoYWRkcmVzcykoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfQ3JlYXRlQXNhICphYmlfcm91dGVfT3B0SW4gKmFiaV9yb3V0ZV9DaGVja09wdGVkSW4gKmFiaV9yb3V0ZV9HYXRld2F5ICphYmlfcm91dGVfR2V0TUJSICphYmlfcm91dGVfQ3JlYXRlUHJvZmlsZSAqYWJpX3JvdXRlX0VkaXRQcm9maWxlICphYmlfcm91dGVfR2V0Q29udHJhY3RGZWUgKmFiaV9yb3V0ZV9nZXRQcm9maWxlCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJyCgoqcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudDoKCXByb3RvIDQgMwoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMSAvLyBlbGVtZW50Cgljb25jYXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1YgoKKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50OgoJcHJvdG8gNCAzCglmcmFtZV9kaWcgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0Cgljb25jYXQKCWZyYW1lX2J1cnkgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0xIC8vIGVsZW1lbnQKCWR1cAoJbGVuCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCWJ0b2kKCSsKCWl0b2IKCWV4dHJhY3QgNiAyCglmcmFtZV9idXJ5IC0yIC8vIGhlYWQgb2Zmc2V0CglmcmFtZV9kaWcgLTMgLy8gdHVwbGUgdGFpbAoJc3dhcAoJY29uY2F0CglmcmFtZV9idXJ5IC0zIC8vIHR1cGxlIHRhaWwKCWZyYW1lX2RpZyAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTMgLy8gdHVwbGUgdGFpbAoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0CglyZXRzdWI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Moth",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "defultPercentage",
            "type": "uint64"
          },
          {
            "name": "siteFee",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "CreateAsa",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "OptIn",
        "args": [
          {
            "name": "optInTxn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "CheckOptedIn",
        "args": [],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "Gateway",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          },
          {
            "name": "toAddress",
            "type": "address"
          },
          {
            "name": "amount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "GetMBR",
        "args": [
          {
            "name": "boxMBRPayment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "CreateProfile",
        "args": [
          {
            "name": "boxMBRPayment",
            "type": "pay"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "logo",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "loyaltyEnabled",
            "type": "bool"
          },
          {
            "name": "loyaltyPercentage",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "(string,string,string,string,bool,uint64)"
        }
      },
      {
        "name": "EditProfile",
        "args": [
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "logo",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "loyaltyEnabled",
            "type": "bool"
          },
          {
            "name": "loyaltyPercentage",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "(string,string,string,string,bool,uint64)"
        }
      },
      {
        "name": "GetContractFee",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "getProfile",
        "args": [
          {
            "name": "address",
            "type": "address"
          }
        ],
        "returns": {
          "type": "(string,string,string,string,bool,uint64)"
        }
      }
    ]
  }
}