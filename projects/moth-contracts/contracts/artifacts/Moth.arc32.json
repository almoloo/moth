{
  "hints": {
    "createApplication(uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "CreateAsa()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "OptIn(axfer)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "CheckOptedIn()bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "GatewayFull(pay,address,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "GatewaySpendToken(pay,address,uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "GetMBR(string,string,string,string,bool,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "EditProfile(pay,string,string,string,string,bool,uint64)(string,string,string,string,bool,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "defultPercentage": {
          "type": "uint64",
          "key": "defultPercentage"
        },
        "contractFee": {
          "type": "uint64",
          "key": "contractFee"
        },
        "royaltyPointToken": {
          "type": "uint64",
          "key": "royaltyPointToken"
        },
        "contractTokenBalance": {
          "type": "uint64",
          "key": "contractTokenBalance"
        },
        "contractFeeBalance": {
          "type": "uint64",
          "key": "contractFeeBalance"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 5
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjkyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQpdm9pZAoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJLy8gc2l0ZUZlZTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gZGVmdWx0UGVyY2VudGFnZTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBjcmVhdGVBcHBsaWNhdGlvbih1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludCAxCglyZXR1cm4KCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKGRlZnVsdFBlcmNlbnRhZ2U6IHVpbnQ2NCwgc2l0ZUZlZTogdWludDY0KTogdm9pZApjcmVhdGVBcHBsaWNhdGlvbjoKCXByb3RvIDIgMAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MjgKCS8vIHRoaXMuZGVmdWx0UGVyY2VudGFnZS52YWx1ZSA9IGRlZnVsdFBlcmNlbnRhZ2UKCWJ5dGUgMHg2NDY1NjY3NTZjNzQ1MDY1NzI2MzY1NmU3NDYxNjc2NSAvLyAiZGVmdWx0UGVyY2VudGFnZSIKCWZyYW1lX2RpZyAtMSAvLyBkZWZ1bHRQZXJjZW50YWdlOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoyOQoJLy8gdGhpcy5jb250cmFjdEZlZS52YWx1ZSA9IHNpdGVGZWUKCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NDY2NTY1IC8vICJjb250cmFjdEZlZSIKCWZyYW1lX2RpZyAtMiAvLyBzaXRlRmVlOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czozMQoJLy8gdGhpcy5jb250cmFjdEZlZUJhbGFuY2UudmFsdWUgPSAwCglieXRlIDB4NjM2ZjZlNzQ3MjYxNjM3NDQ2NjU2NTQyNjE2YzYxNmU2MzY1IC8vICJjb250cmFjdEZlZUJhbGFuY2UiCglpbnQgMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjMyCgkvLyB0aGlzLmNvbnRyYWN0VG9rZW5CYWxhbmNlLnZhbHVlID0gMAoJYnl0ZSAweDYzNmY2ZTc0NzI2MTYzNzQ1NDZmNmI2NTZlNDI2MTZjNjE2ZTYzNjUgLy8gImNvbnRyYWN0VG9rZW5CYWxhbmNlIgoJaW50IDAKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIE9ubHlDcmVhdG9yKCk6IHZvaWQKLy8KLy8gRW5zdXJlIHRoZSBjYWxsZXIgaXMgYXBwIGNyZWF0b3IKT25seUNyZWF0b3I6Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjM3CgkvLyBhc3NlcnQodGhpcy5hcHAuY3JlYXRvciA9PT0gdGhpcy50eG4uc2VuZGVyKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYXBwX3BhcmFtc19nZXQgQXBwQ3JlYXRvcgoJcG9wCgl0eG4gU2VuZGVyCgk9PQoJYXNzZXJ0CglyZXRzdWIKCi8vIENyZWF0ZUFzYSgpdWludDY0CiphYmlfcm91dGVfQ3JlYXRlQXNhOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIENyZWF0ZUFzYSgpdWludDY0CgljYWxsc3ViIENyZWF0ZUFzYQoJaXRvYgoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIENyZWF0ZUFzYSgpOiBBc3NldElECkNyZWF0ZUFzYToKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlIDB4CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo0MQoJLy8gdGhpcy5Pbmx5Q3JlYXRvcigpCgljYWxsc3ViIE9ubHlDcmVhdG9yCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo0MgoJLy8gYXNzZXJ0KCF0aGlzLnJveWFsdHlQb2ludFRva2VuLmV4aXN0cykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg3MjZmNzk2MTZjNzQ3OTUwNmY2OTZlNzQ1NDZmNmI2NTZlIC8vICJyb3lhbHR5UG9pbnRUb2tlbiIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCSEKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NDQKCS8vIGNyZWF0ZUFzc2V0ID0gc2VuZEFzc2V0Q3JlYXRpb24oewoJLy8gICAgICAgY29uZmlnQXNzZXROYW1lOiAnTWF0aGFrJywKCS8vICAgICAgIGNvbmZpZ0Fzc2V0VW5pdE5hbWU6ICdNQUsnLAoJLy8gICAgICAgY29uZmlnQXNzZXRUb3RhbDogMTAwMDAwLAoJLy8gICAgICAgY29uZmlnQXNzZXREZWNpbWFsczogMCwKCS8vICAgICAgIGNvbmZpZ0Fzc2V0Q2xhd2JhY2s6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICBjb25maWdBc3NldE1hbmFnZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBhY2ZnCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo0NQoJLy8gY29uZmlnQXNzZXROYW1lOiAnTWF0aGFrJwoJYnl0ZSAweDRkNjE3NDY4NjE2YiAvLyAiTWF0aGFrIgoJaXR4bl9maWVsZCBDb25maWdBc3NldE5hbWUKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjQ2CgkvLyBjb25maWdBc3NldFVuaXROYW1lOiAnTUFLJwoJYnl0ZSAweDRkNDE0YiAvLyAiTUFLIgoJaXR4bl9maWVsZCBDb25maWdBc3NldFVuaXROYW1lCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo0NwoJLy8gY29uZmlnQXNzZXRUb3RhbDogMTAwMDAwCglpbnQgMTAwMDAwCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VG90YWwKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjQ4CgkvLyBjb25maWdBc3NldERlY2ltYWxzOiAwCglpbnQgMAoJaXR4bl9maWVsZCBDb25maWdBc3NldERlY2ltYWxzCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo0OQoJLy8gY29uZmlnQXNzZXRDbGF3YmFjazogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgQ29uZmlnQXNzZXRDbGF3YmFjawoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NTAKCS8vIGNvbmZpZ0Fzc2V0TWFuYWdlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgQ29uZmlnQXNzZXRNYW5hZ2VyCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJaXR4biBDcmVhdGVkQXNzZXRJRAoJZnJhbWVfYnVyeSAwIC8vIGNyZWF0ZUFzc2V0OiB1aW50NjQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjUzCgkvLyB0aGlzLnJveWFsdHlQb2ludFRva2VuLnZhbHVlID0gY3JlYXRlQXNzZXQKCWJ5dGUgMHg3MjZmNzk2MTZjNzQ3OTUwNmY2OTZlNzQ1NDZmNmI2NTZlIC8vICJyb3lhbHR5UG9pbnRUb2tlbiIKCWZyYW1lX2RpZyAwIC8vIGNyZWF0ZUFzc2V0OiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo1NQoJLy8gcmV0dXJuIGNyZWF0ZUFzc2V0OwoJZnJhbWVfZGlnIDAgLy8gY3JlYXRlQXNzZXQ6IHVpbnQ2NAoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgovLyBPcHRJbihheGZlcilib29sCiphYmlfcm91dGVfT3B0SW46CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIG9wdEluVHhuOiBheGZlcgoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnQgYXhmZXIKCT09CgoJLy8gYXJndW1lbnQgMCAob3B0SW5UeG4pIGZvciBPcHRJbiBtdXN0IGJlIGEgYXhmZXIgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgT3B0SW4oYXhmZXIpYm9vbAoJY2FsbHN1YiBPcHRJbgoJYnl0ZSAweDAwCglpbnQgMAoJdW5jb3ZlciAyCglzZXRiaXQKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBPcHRJbihvcHRJblR4bjogQXNzZXRUcmFuc2ZlclR4bik6IGJvb2xlYW4KT3B0SW46Cglwcm90byAxIDEKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjYxCgkvLyB2ZXJpZnlBc3NldFRyYW5zZmVyVHhuKG9wdEluVHhuLCB7CgkvLyAgICAgICBzZW5kZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgIHhmZXJBc3NldDogdGhpcy5yb3lhbHR5UG9pbnRUb2tlbi52YWx1ZSwKCS8vICAgICAgIGFzc2V0QW1vdW50OiAwLAoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCglmcmFtZV9kaWcgLTEgLy8gb3B0SW5UeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIFNlbmRlcgoJdHhuIFNlbmRlcgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6Im9wdEluVHhuIiwiZmllbGQiOiJzZW5kZXIiLCJleHBlY3RlZCI6InRoaXMudHhuLnNlbmRlciJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgeGZlckFzc2V0CglmcmFtZV9kaWcgLTEgLy8gb3B0SW5UeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIFhmZXJBc3NldAoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJvcHRJblR4biIsImZpZWxkIjoieGZlckFzc2V0IiwiZXhwZWN0ZWQiOiJ0aGlzLnJveWFsdHlQb2ludFRva2VuLnZhbHVlIn0KCWFzc2VydAoKCS8vIHZlcmlmeSBhc3NldEFtb3VudAoJZnJhbWVfZGlnIC0xIC8vIG9wdEluVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldEFtb3VudAoJaW50IDAKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJvcHRJblR4biIsImZpZWxkIjoiYXNzZXRBbW91bnQiLCJleHBlY3RlZCI6IjAifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IGFzc2V0UmVjZWl2ZXIKCWZyYW1lX2RpZyAtMSAvLyBvcHRJblR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRSZWNlaXZlcgoJdHhuIFNlbmRlcgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6Im9wdEluVHhuIiwiZmllbGQiOiJhc3NldFJlY2VpdmVyIiwiZXhwZWN0ZWQiOiJ0aGlzLnR4bi5zZW5kZXIifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo2OAoJLy8gcmV0dXJuIHRoaXMudHhuLnNlbmRlci5pc09wdGVkSW5Ub0Fzc2V0KHRoaXMucm95YWx0eVBvaW50VG9rZW4udmFsdWUpOwoJdHhuIFNlbmRlcgoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJc3dhcAoJcG9wCglyZXRzdWIKCi8vIENoZWNrT3B0ZWRJbigpYm9vbAoqYWJpX3JvdXRlX0NoZWNrT3B0ZWRJbjoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBDaGVja09wdGVkSW4oKWJvb2wKCWNhbGxzdWIgQ2hlY2tPcHRlZEluCglieXRlIDB4MDAKCWludCAwCgl1bmNvdmVyIDIKCXNldGJpdAoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIENoZWNrT3B0ZWRJbigpOiBib29sZWFuCkNoZWNrT3B0ZWRJbjoKCXByb3RvIDAgMQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NzIKCS8vIHJldHVybiB0aGlzLnR4bi5zZW5kZXIuaXNPcHRlZEluVG9Bc3NldCh0aGlzLnJveWFsdHlQb2ludFRva2VuLnZhbHVlKTsKCXR4biBTZW5kZXIKCWJ5dGUgMHg3MjZmNzk2MTZjNzQ3OTUwNmY2OTZlNzQ1NDZmNmI2NTZlIC8vICJyb3lhbHR5UG9pbnRUb2tlbiIKCWFwcF9nbG9iYWxfZ2V0Cglhc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKCXN3YXAKCXBvcAoJcmV0c3ViCgovLyBHYXRld2F5RnVsbChwYXksYWRkcmVzcyx1aW50NjQpdm9pZAoqYWJpX3JvdXRlX0dhdGV3YXlGdWxsOgoJLy8gYW1vdW50OiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCgkvLyB0b0FkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMSAodG9BZGRyZXNzKSBmb3IgR2F0ZXdheUZ1bGwgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIHBheW1lbnQ6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnQgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDIgKHBheW1lbnQpIGZvciBHYXRld2F5RnVsbCBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBleGVjdXRlIEdhdGV3YXlGdWxsKHBheSxhZGRyZXNzLHVpbnQ2NCl2b2lkCgljYWxsc3ViIEdhdGV3YXlGdWxsCglpbnQgMQoJcmV0dXJuCgovLyBHYXRld2F5RnVsbChwYXltZW50OiBQYXlUeG4sIHRvQWRkcmVzczogQWRkcmVzcywgYW1vdW50OiB1aW50NjQpOiB2b2lkCkdhdGV3YXlGdWxsOgoJcHJvdG8gMyAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCWR1cAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NzYKCS8vIGFzc2VydCh0aGlzLnJveWFsdHlQb2ludFRva2VuLmV4aXN0cykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg3MjZmNzk2MTZjNzQ3OTUwNmY2OTZlNzQ1NDZmNmI2NTZlIC8vICJyb3lhbHR5UG9pbnRUb2tlbiIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6NzcKCS8vIGFzc2VydCh0aGlzLnByb2ZpbGVzKHRvQWRkcmVzcykuZXhpc3RzKQoJZnJhbWVfZGlnIC0yIC8vIHRvQWRkcmVzczogQWRkcmVzcwoJYm94X2xlbgoJc3dhcAoJcG9wCglhc3NlcnQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjc4CgkvLyBhc3NlcnQodGhpcy5jb250cmFjdEZlZS52YWx1ZSA8IGFtb3VudCkKCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NDY2NTY1IC8vICJjb250cmFjdEZlZSIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTMgLy8gYW1vdW50OiB1aW50NjQKCTwKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODAKCS8vIHRoaXMudHhuLnNlbmRlci5pc09wdGVkSW5Ub0Fzc2V0KHRoaXMucm95YWx0eVBvaW50VG9rZW4udmFsdWUpCgl0eG4gU2VuZGVyCglieXRlIDB4NzI2Zjc5NjE2Yzc0Nzk1MDZmNjk2ZTc0NTQ2ZjZiNjU2ZSAvLyAicm95YWx0eVBvaW50VG9rZW4iCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglzd2FwCglwb3AKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjgyCgkvLyB2ZXJpZnlUeG4ocGF5bWVudCwgewoJLy8gICAgICAgYW1vdW50OiBhbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICB9KQoJLy8gdmVyaWZ5IGFtb3VudAoJZnJhbWVfZGlnIC0xIC8vIHBheW1lbnQ6IFBheVR4bgoJZ3R4bnMgQW1vdW50CglmcmFtZV9kaWcgLTMgLy8gYW1vdW50OiB1aW50NjQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJwYXltZW50IiwiZmllbGQiOiJhbW91bnQiLCJleHBlY3RlZCI6ImFtb3VudCJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgcmVjZWl2ZXIKCWZyYW1lX2RpZyAtMSAvLyBwYXltZW50OiBQYXlUeG4KCWd0eG5zIFJlY2VpdmVyCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InBheW1lbnQiLCJmaWVsZCI6InJlY2VpdmVyIiwiZXhwZWN0ZWQiOiJ0aGlzLmFwcC5hZGRyZXNzIn0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODcKCS8vIHRvUHJvZmlsZSA9IHRoaXMucHJvZmlsZXModG9BZGRyZXNzKS52YWx1ZQoJZnJhbWVfZGlnIC0yIC8vIHRvQWRkcmVzczogQWRkcmVzcwoJZnJhbWVfYnVyeSAwIC8vIHN0b3JhZ2Uga2V5Ly90b1Byb2ZpbGUKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjg4CgkvLyBhZGRlZFRva2VuID0gKGFtb3VudCAvIDEwMCkgKiB0b1Byb2ZpbGUubG95YWx0eVBlcmNlbnRhZ2UKCWZyYW1lX2RpZyAtMyAvLyBhbW91bnQ6IHVpbnQ2NAoJaW50IDEwMAoJLwoJZnJhbWVfZGlnIDAgLy8gc3RvcmFnZSBrZXkvL3RvUHJvZmlsZQoJYm94X2dldAoKCS8vIGJveCB2YWx1ZSBkb2VzIG5vdCBleGlzdDogdGhpcy5wcm9maWxlcyh0b0FkZHJlc3MpLnZhbHVlCglhc3NlcnQKCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglleHRyYWN0IDkgOAoJYnRvaQoJKgoJZnJhbWVfYnVyeSAxIC8vIGFkZGVkVG9rZW46IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6ODkKCS8vIHRoaXMuY29udHJhY3RGZWVCYWxhbmNlLnZhbHVlICs9IHRoaXMuY29udHJhY3RGZWUudmFsdWUKCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NDY2NTY1NDI2MTZjNjE2ZTYzNjUgLy8gImNvbnRyYWN0RmVlQmFsYW5jZSIKCWFwcF9nbG9iYWxfZ2V0CglieXRlIDB4NjM2ZjZlNzQ3MjYxNjM3NDQ2NjU2NSAvLyAiY29udHJhY3RGZWUiCglhcHBfZ2xvYmFsX2dldAoJKwoJYnl0ZSAweDYzNmY2ZTc0NzI2MTYzNzQ0NjY1NjU0MjYxNmM2MTZlNjM2NSAvLyAiY29udHJhY3RGZWVCYWxhbmNlIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjkwCgkvLyB0aGlzLmNvbnRyYWN0VG9rZW5CYWxhbmNlLnZhbHVlICs9IGFkZGVkVG9rZW4KCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NTQ2ZjZiNjU2ZTQyNjE2YzYxNmU2MzY1IC8vICJjb250cmFjdFRva2VuQmFsYW5jZSIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMSAvLyBhZGRlZFRva2VuOiB1aW50NjQKCSsKCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NTQ2ZjZiNjU2ZTQyNjE2YzYxNmU2MzY1IC8vICJjb250cmFjdFRva2VuQmFsYW5jZSIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo5MgoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgeGZlckFzc2V0OiB0aGlzLnJveWFsdHlQb2ludFRva2VuLnZhbHVlLAoJLy8gICAgICAgYXNzZXRBbW91bnQ6IGFkZGVkVG9rZW4sCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6OTMKCS8vIHhmZXJBc3NldDogdGhpcy5yb3lhbHR5UG9pbnRUb2tlbi52YWx1ZQoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo5NAoJLy8gYXNzZXRBbW91bnQ6IGFkZGVkVG9rZW4KCWZyYW1lX2RpZyAxIC8vIGFkZGVkVG9rZW46IHVpbnQ2NAoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6OTUKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlcgoJdHhuIFNlbmRlcgoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo5NgoJLy8gc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBTZW5kZXIKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnQgMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czo5OQoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiBhbW91bnQgLSBhZGRlZFRva2VuIC0gdGhpcy5jb250cmFjdEZlZS52YWx1ZSwKCS8vICAgICAgIHJlY2VpdmVyOiB0b0FkZHJlc3MsCgkvLyAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBwYXkKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjEwMAoJLy8gYW1vdW50OiBhbW91bnQgLSBhZGRlZFRva2VuIC0gdGhpcy5jb250cmFjdEZlZS52YWx1ZQoJZnJhbWVfZGlnIC0zIC8vIGFtb3VudDogdWludDY0CglmcmFtZV9kaWcgMSAvLyBhZGRlZFRva2VuOiB1aW50NjQKCS0KCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NDY2NTY1IC8vICJjb250cmFjdEZlZSIKCWFwcF9nbG9iYWxfZ2V0CgktCglpdHhuX2ZpZWxkIEFtb3VudAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTAxCgkvLyByZWNlaXZlcjogdG9BZGRyZXNzCglmcmFtZV9kaWcgLTIgLy8gdG9BZGRyZXNzOiBBZGRyZXNzCglpdHhuX2ZpZWxkIFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxMDIKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgovLyBHYXRld2F5U3BlbmRUb2tlbihwYXksYWRkcmVzcyx1aW50NjQsdWludDY0KXVpbnQ2NAoqYWJpX3JvdXRlX0dhdGV3YXlTcGVuZFRva2VuOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyB0b2tlblRvU3BlbmQ6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJYnRvaQoKCS8vIHRvdGFsQW1vdW50OiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCgkvLyB0b0FkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09CgoJLy8gYXJndW1lbnQgMiAodG9BZGRyZXNzKSBmb3IgR2F0ZXdheVNwZW5kVG9rZW4gbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIHBheW1lbnQ6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnQgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDMgKHBheW1lbnQpIGZvciBHYXRld2F5U3BlbmRUb2tlbiBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBleGVjdXRlIEdhdGV3YXlTcGVuZFRva2VuKHBheSxhZGRyZXNzLHVpbnQ2NCx1aW50NjQpdWludDY0CgljYWxsc3ViIEdhdGV3YXlTcGVuZFRva2VuCglpdG9iCgljb25jYXQKCWxvZwoJaW50IDEKCXJldHVybgoKLy8gR2F0ZXdheVNwZW5kVG9rZW4ocGF5bWVudDogUGF5VHhuLCB0b0FkZHJlc3M6IEFkZHJlc3MsIHRvdGFsQW1vdW50OiB1aW50NjQsIHRva2VuVG9TcGVuZDogdWludDY0KTogdWludDY0CkdhdGV3YXlTcGVuZFRva2VuOgoJcHJvdG8gNCAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjEwNwoJLy8gYXNzZXJ0KHRoaXMucm95YWx0eVBvaW50VG9rZW4uZXhpc3RzKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZSAweDcyNmY3OTYxNmM3NDc5NTA2ZjY5NmU3NDU0NmY2YjY1NmUgLy8gInJveWFsdHlQb2ludFRva2VuIgoJYXBwX2dsb2JhbF9nZXRfZXgKCXN3YXAKCXBvcAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxMDgKCS8vIGFzc2VydCh0aGlzLnByb2ZpbGVzKHRvQWRkcmVzcykuZXhpc3RzKQoJZnJhbWVfZGlnIC0yIC8vIHRvQWRkcmVzczogQWRkcmVzcwoJYm94X2xlbgoJc3dhcAoJcG9wCglhc3NlcnQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjEwOQoJLy8gYXNzZXJ0KHRoaXMuY29udHJhY3RGZWUudmFsdWUgPCB0b3RhbEFtb3VudCkKCWJ5dGUgMHg2MzZmNmU3NDcyNjE2Mzc0NDY2NTY1IC8vICJjb250cmFjdEZlZSIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTMgLy8gdG90YWxBbW91bnQ6IHVpbnQ2NAoJPAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxMTEKCS8vIHRvUHJvZmlsZSA9IHRoaXMucHJvZmlsZXModG9BZGRyZXNzKS52YWx1ZQoJZnJhbWVfZGlnIC0yIC8vIHRvQWRkcmVzczogQWRkcmVzcwoJZnJhbWVfYnVyeSAwIC8vIHN0b3JhZ2Uga2V5Ly90b1Byb2ZpbGUKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjExMgoJLy8gYXNzZXJ0KHRvUHJvZmlsZS5sb3lhbHR5RW5hYmxlZCkKCWZyYW1lX2RpZyAwIC8vIHN0b3JhZ2Uga2V5Ly90b1Byb2ZpbGUKCWJveF9nZXQKCgkvLyBib3ggdmFsdWUgZG9lcyBub3QgZXhpc3Q6IHRoaXMucHJvZmlsZXModG9BZGRyZXNzKS52YWx1ZQoJYXNzZXJ0CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50IDY0CglnZXRiaXQKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTE0CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyLmFzc2V0QmFsYW5jZSh0aGlzLnJveWFsdHlQb2ludFRva2VuLnZhbHVlKSA+IHRva2VuVG9TcGVuZCkKCXR4biBTZW5kZXIKCWJ5dGUgMHg3MjZmNzk2MTZjNzQ3OTUwNmY2OTZlNzQ1NDZmNmI2NTZlIC8vICJyb3lhbHR5UG9pbnRUb2tlbiIKCWFwcF9nbG9iYWxfZ2V0Cglhc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKCXBvcAoJZnJhbWVfZGlnIC00IC8vIHRva2VuVG9TcGVuZDogdWludDY0Cgk+Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjExNQoJLy8gcmV0dXJuIDA7CglpbnQgMAoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgovLyBHZXRNQlIoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KXVpbnQ2NAoqYWJpX3JvdXRlX0dldE1CUjoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZSAweDE1MWY3Yzc1CgoJLy8gbG95YWx0eVBlcmNlbnRhZ2U6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNgoJYnRvaQoKCS8vIGxveWFsdHlFbmFibGVkOiBib29sCgl0eG5hIEFwcGxpY2F0aW9uQXJncyA1CglkdXAKCWxlbgoJaW50IDEKCT09CgoJLy8gYXJndW1lbnQgMSAobG95YWx0eUVuYWJsZWQpIGZvciBHZXRNQlIgbXVzdCBiZSBhIGJvb2wKCWFzc2VydAoJaW50IDAKCWdldGJpdAoKCS8vIHVybDogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyA0CglleHRyYWN0IDIgMAoKCS8vIGRlc2NyaXB0aW9uOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWV4dHJhY3QgMiAwCgoJLy8gbG9nbzogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglleHRyYWN0IDIgMAoKCS8vIHRpdGxlOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWV4dHJhY3QgMiAwCgoJLy8gZXhlY3V0ZSBHZXRNQlIoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KXVpbnQ2NAoJY2FsbHN1YiBHZXRNQlIKCWl0b2IKCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBHZXRNQlIodGl0bGU6IHN0cmluZywgbG9nbzogc3RyaW5nLCBkZXNjcmlwdGlvbjogc3RyaW5nLCB1cmw6IHN0cmluZywgbG95YWx0eUVuYWJsZWQ6IGJvb2xlYW4sIGxveWFsdHlQZXJjZW50YWdlOiB1aW50NjQpOiB1aW50NjQKR2V0TUJSOgoJcHJvdG8gNiAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCWR1cAoKCS8vICppZjBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjE0OAoJLy8gdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLmV4aXN0cwoJdHhuIFNlbmRlcgoJYm94X2xlbgoJc3dhcAoJcG9wCglieiAqaWYwX2VuZAoKCS8vICppZjBfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxNDkKCS8vIHRoaXMucHJvZmlsZXModGhpcy5hcHAuYWRkcmVzcykudmFsdWUgPSB0aGlzLnByb2ZpbGVzKHRoaXMudHhuLnNlbmRlcikudmFsdWUKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglkdXAKCWJveF9kZWwKCXBvcAoJdHhuIFNlbmRlcgoJYm94X2dldAoKCS8vIGJveCB2YWx1ZSBkb2VzIG5vdCBleGlzdDogdGhpcy5wcm9maWxlcyh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlCglhc3NlcnQKCWJveF9wdXQKCippZjBfZW5kOgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxNTIKCS8vIHByZUFwcE1CUiA9IHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZQoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0TWluQmFsYW5jZQoJcG9wCglmcmFtZV9idXJ5IDAgLy8gcHJlQXBwTUJSOiB1aW50NjQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjE1MwoJLy8gdGhpcy5wcm9maWxlcyh0aGlzLmFwcC5hZGRyZXNzKS52YWx1ZSA9IHsKCS8vICAgICAgIHRpdGxlOiB0aXRsZSwKCS8vICAgICAgIGxvZ286IGxvZ28sCgkvLyAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sCgkvLyAgICAgICB1cmw6IHVybCwKCS8vICAgICAgIGxveWFsdHlFbmFibGVkOiBsb3lhbHR5RW5hYmxlZCwKCS8vICAgICAgIGxveWFsdHlQZXJjZW50YWdlOiBsb3lhbHR5UGVyY2VudGFnZSwKCS8vICAgICB9CglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJZHVwCglib3hfZGVsCglwb3AKCWJ5dGUgMHggLy8gaW5pdGlhbCBoZWFkCglieXRlIDB4IC8vIGluaXRpYWwgdGFpbAoJYnl0ZSAweDAwMTEgLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJZnJhbWVfZGlnIC0xIC8vIHRpdGxlOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJZnJhbWVfZGlnIC0yIC8vIGxvZ286IHN0cmluZwoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTMgLy8gZGVzY3JpcHRpb246IHN0cmluZwoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTQgLy8gdXJsOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJYnl0ZSAweDAwCglpbnQgMAoJZnJhbWVfZGlnIC01IC8vIGxveWFsdHlFbmFibGVkOiBib29sZWFuCglzZXRiaXQKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtNiAvLyBsb3lhbHR5UGVyY2VudGFnZTogdWludDY0CglpdG9iCgljYWxsc3ViICpwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWJveF9wdXQKCgkvLyAqaWYxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxNjIKCS8vIHByZUFwcE1CUiA+IHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZQoJZnJhbWVfZGlnIDAgLy8gcHJlQXBwTUJSOiB1aW50NjQKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCXBvcAoJPgoJYnogKmlmMV9lbmQKCgkvLyAqaWYxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTYzCgkvLyB0aGlzLnByb2ZpbGVzKHRoaXMuYXBwLmFkZHJlc3MpLmRlbGV0ZSgpCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYm94X2RlbAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTY0CgkvLyByZXR1cm4gMDsKCWludCAwCgliICpHZXRNQlIqcmV0dXJuCgoqaWYxX2VuZDoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTY3CgkvLyBNYnIgPSB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UgLSBwcmVBcHBNQlIKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCXBvcAoJZnJhbWVfZGlnIDAgLy8gcHJlQXBwTUJSOiB1aW50NjQKCS0KCWZyYW1lX2J1cnkgMSAvLyBNYnI6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTY4CgkvLyB0aGlzLnByb2ZpbGVzKHRoaXMuYXBwLmFkZHJlc3MpLmRlbGV0ZSgpCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYm94X2RlbAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTY5CgkvLyByZXR1cm4gTWJyOwoJZnJhbWVfZGlnIDEgLy8gTWJyOiB1aW50NjQKCipHZXRNQlIqcmV0dXJuOgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCgoJLy8gcG9wIGFsbCBsb2NhbCB2YXJpYWJsZXMgZnJvbSB0aGUgc3RhY2sKCXBvcG4gMQoJcmV0c3ViCgovLyBFZGl0UHJvZmlsZShwYXksc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KShzdHJpbmcsc3RyaW5nLHN0cmluZyxzdHJpbmcsYm9vbCx1aW50NjQpCiphYmlfcm91dGVfRWRpdFByb2ZpbGU6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGUgMHgxNTFmN2M3NQoKCS8vIGxveWFsdHlQZXJjZW50YWdlOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDYKCWJ0b2kKCgkvLyBsb3lhbHR5RW5hYmxlZDogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNQoJZHVwCglsZW4KCWludCAxCgk9PQoKCS8vIGFyZ3VtZW50IDEgKGxveWFsdHlFbmFibGVkKSBmb3IgRWRpdFByb2ZpbGUgbXVzdCBiZSBhIGJvb2wKCWFzc2VydAoJaW50IDAKCWdldGJpdAoKCS8vIHVybDogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyA0CglleHRyYWN0IDIgMAoKCS8vIGRlc2NyaXB0aW9uOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWV4dHJhY3QgMiAwCgoJLy8gbG9nbzogc3RyaW5nCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglleHRyYWN0IDIgMAoKCS8vIHRpdGxlOiBzdHJpbmcKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWV4dHJhY3QgMiAwCgoJLy8gYm94TUJSUGF5bWVudDogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50IDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludCBwYXkKCT09CgoJLy8gYXJndW1lbnQgNiAoYm94TUJSUGF5bWVudCkgZm9yIEVkaXRQcm9maWxlIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgRWRpdFByb2ZpbGUocGF5LHN0cmluZyxzdHJpbmcsc3RyaW5nLHN0cmluZyxib29sLHVpbnQ2NCkoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KQoJY2FsbHN1YiBFZGl0UHJvZmlsZQoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIEVkaXRQcm9maWxlKGJveE1CUlBheW1lbnQ6IFBheVR4biwgdGl0bGU6IHN0cmluZywgbG9nbzogc3RyaW5nLCBkZXNjcmlwdGlvbjogc3RyaW5nLCB1cmw6IHN0cmluZywgbG95YWx0eUVuYWJsZWQ6IGJvb2xlYW4sIGxveWFsdHlQZXJjZW50YWdlOiB1aW50NjQpOiBwcm9maWxlCkVkaXRQcm9maWxlOgoJcHJvdG8gNyAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjE4MQoJLy8gcHJlQXBwTUJSID0gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglwb3AKCWZyYW1lX2J1cnkgMCAvLyBwcmVBcHBNQlI6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTgyCgkvLyB0aGlzLnByb2ZpbGVzKHRoaXMudHhuLnNlbmRlcikudmFsdWUgPSB7CgkvLyAgICAgICB0aXRsZTogdGl0bGUsCgkvLyAgICAgICBsb2dvOiBsb2dvLAoJLy8gICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAoJLy8gICAgICAgdXJsOiB1cmwsCgkvLyAgICAgICBsb3lhbHR5RW5hYmxlZDogbG95YWx0eUVuYWJsZWQsCgkvLyAgICAgICBsb3lhbHR5UGVyY2VudGFnZTogbG95YWx0eVBlcmNlbnRhZ2UsCgkvLyAgICAgfQoJdHhuIFNlbmRlcgoJZHVwCglib3hfZGVsCglwb3AKCWJ5dGUgMHggLy8gaW5pdGlhbCBoZWFkCglieXRlIDB4IC8vIGluaXRpYWwgdGFpbAoJYnl0ZSAweDAwMTEgLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJZnJhbWVfZGlnIC0yIC8vIHRpdGxlOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJZnJhbWVfZGlnIC0zIC8vIGxvZ286IHN0cmluZwoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTQgLy8gZGVzY3JpcHRpb246IHN0cmluZwoJZHVwCglsZW4KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTUgLy8gdXJsOiBzdHJpbmcKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0CgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJYnl0ZSAweDAwCglpbnQgMAoJZnJhbWVfZGlnIC02IC8vIGxveWFsdHlFbmFibGVkOiBib29sZWFuCglzZXRiaXQKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtNyAvLyBsb3lhbHR5UGVyY2VudGFnZTogdWludDY0CglpdG9iCgljYWxsc3ViICpwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWJveF9wdXQKCgkvLyAqaWYyX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoxOTEKCS8vIHByZUFwcE1CUiA+PSB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UKCWZyYW1lX2RpZyAwIC8vIHByZUFwcE1CUjogdWludDY0CglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglwb3AKCT49CglieiAqaWYyX2Vsc2UKCgkvLyAqaWYyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTkyCgkvLyBzZW5kUGF5bWVudCh7CgkvLyAgICAgICAgIGFtb3VudDogcHJlQXBwTUJSIC0gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlLAoJLy8gICAgICAgICByZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IHBheQoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTkzCgkvLyBhbW91bnQ6IHByZUFwcE1CUiAtIHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZQoJZnJhbWVfZGlnIDAgLy8gcHJlQXBwTUJSOiB1aW50NjQKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCXBvcAoJLQoJaXR4bl9maWVsZCBBbW91bnQKCgkvLyBjb250cmFjdHMvTW90aC5hbGdvLnRzOjE5NAoJLy8gcmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlcgoJdHhuIFNlbmRlcgoJaXR4bl9maWVsZCBSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTk1CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCWIgKmlmMl9lbmQKCippZjJfZWxzZToKCS8vIGNvbnRyYWN0cy9Nb3RoLmFsZ28udHM6MTk4CgkvLyB2ZXJpZnlUeG4oYm94TUJSUGF5bWVudCwgewoJLy8gICAgICAgICByZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgICAgYW1vdW50OiB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UgLSBwcmVBcHBNQlIsCgkvLyAgICAgICB9KQoJLy8gdmVyaWZ5IHJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8gYm94TUJSUGF5bWVudDogUGF5VHhuCglndHhucyBSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJib3hNQlJQYXltZW50IiwiZmllbGQiOiJyZWNlaXZlciIsImV4cGVjdGVkIjoidGhpcy5hcHAuYWRkcmVzcyJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYW1vdW50CglmcmFtZV9kaWcgLTEgLy8gYm94TUJSUGF5bWVudDogUGF5VHhuCglndHhucyBBbW91bnQKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCXBvcAoJZnJhbWVfZGlnIDAgLy8gcHJlQXBwTUJSOiB1aW50NjQKCS0KCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJib3hNQlJQYXltZW50IiwiZmllbGQiOiJhbW91bnQiLCJleHBlY3RlZCI6InRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZSAtIHByZUFwcE1CUiJ9Cglhc3NlcnQKCippZjJfZW5kOgoJLy8gY29udHJhY3RzL01vdGguYWxnby50czoyMDQKCS8vIHJldHVybiB0aGlzLnByb2ZpbGVzKHRoaXMudHhuLnNlbmRlcikudmFsdWU7Cgl0eG4gU2VuZGVyCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLnByb2ZpbGVzKHRoaXMudHhuLnNlbmRlcikudmFsdWUKCWFzc2VydAoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqY3JlYXRlX05vT3A6CgltZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCW1ldGhvZCAiQ3JlYXRlQXNhKCl1aW50NjQiCgltZXRob2QgIk9wdEluKGF4ZmVyKWJvb2wiCgltZXRob2QgIkNoZWNrT3B0ZWRJbigpYm9vbCIKCW1ldGhvZCAiR2F0ZXdheUZ1bGwocGF5LGFkZHJlc3MsdWludDY0KXZvaWQiCgltZXRob2QgIkdhdGV3YXlTcGVuZFRva2VuKHBheSxhZGRyZXNzLHVpbnQ2NCx1aW50NjQpdWludDY0IgoJbWV0aG9kICJHZXRNQlIoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KXVpbnQ2NCIKCW1ldGhvZCAiRWRpdFByb2ZpbGUocGF5LHN0cmluZyxzdHJpbmcsc3RyaW5nLHN0cmluZyxib29sLHVpbnQ2NCkoc3RyaW5nLHN0cmluZyxzdHJpbmcsc3RyaW5nLGJvb2wsdWludDY0KSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfQ3JlYXRlQXNhICphYmlfcm91dGVfT3B0SW4gKmFiaV9yb3V0ZV9DaGVja09wdGVkSW4gKmFiaV9yb3V0ZV9HYXRld2F5RnVsbCAqYWJpX3JvdXRlX0dhdGV3YXlTcGVuZFRva2VuICphYmlfcm91dGVfR2V0TUJSICphYmlfcm91dGVfRWRpdFByb2ZpbGUKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnIKCipwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50OgoJcHJvdG8gNCAzCglmcmFtZV9kaWcgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0xIC8vIGVsZW1lbnQKCWNvbmNhdAoJZnJhbWVfZGlnIC0zIC8vIHR1cGxlIHRhaWwKCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJcmV0c3ViCgoqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQ6Cglwcm90byA0IDMKCWZyYW1lX2RpZyAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCWNvbmNhdAoJZnJhbWVfYnVyeSAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTEgLy8gZWxlbWVudAoJZHVwCglsZW4KCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJYnRvaQoJKwoJaXRvYgoJZXh0cmFjdCA2IDIKCWZyYW1lX2J1cnkgLTIgLy8gaGVhZCBvZmZzZXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglzd2FwCgljb25jYXQKCWZyYW1lX2J1cnkgLTMgLy8gdHVwbGUgdGFpbAoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1Yg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Moth",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "defultPercentage",
            "type": "uint64"
          },
          {
            "name": "siteFee",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "CreateAsa",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "OptIn",
        "args": [
          {
            "name": "optInTxn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "CheckOptedIn",
        "args": [],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "GatewayFull",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          },
          {
            "name": "toAddress",
            "type": "address"
          },
          {
            "name": "amount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "GatewaySpendToken",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          },
          {
            "name": "toAddress",
            "type": "address"
          },
          {
            "name": "totalAmount",
            "type": "uint64"
          },
          {
            "name": "tokenToSpend",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "GetMBR",
        "args": [
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "logo",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "loyaltyEnabled",
            "type": "bool"
          },
          {
            "name": "loyaltyPercentage",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "EditProfile",
        "args": [
          {
            "name": "boxMBRPayment",
            "type": "pay"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "logo",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "loyaltyEnabled",
            "type": "bool"
          },
          {
            "name": "loyaltyPercentage",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "(string,string,string,string,bool,uint64)"
        }
      }
    ]
  }
}