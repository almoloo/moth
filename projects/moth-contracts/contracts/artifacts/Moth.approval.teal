#pragma version 10

// This TEAL was generated by TEALScript v0.92.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(uint64,uint64)void
*abi_route_createApplication:
	// siteFee: uint64
	txna ApplicationArgs 2
	btoi

	// defultPercentage: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64,uint64)void
	callsub createApplication
	int 1
	return

// createApplication(defultPercentage: uint64, siteFee: uint64): void
createApplication:
	proto 2 0

	// contracts/Moth.algo.ts:26
	// this.defultPercentage.value = defultPercentage
	byte 0x646566756c7450657263656e74616765 // "defultPercentage"
	frame_dig -1 // defultPercentage: uint64
	app_global_put

	// contracts/Moth.algo.ts:27
	// this.contractFee.value = siteFee
	byte 0x636f6e7472616374466565 // "contractFee"
	frame_dig -2 // siteFee: uint64
	app_global_put
	retsub

// OnlyCreator(): void
//
// Ensure the caller is app creator
OnlyCreator:
	proto 0 0

	// contracts/Moth.algo.ts:32
	// assert(this.app.creator === this.txn.sender)
	txna Applications 0
	app_params_get AppCreator
	pop
	txn Sender
	==
	assert
	retsub

// CreateAsa()uint64
*abi_route_CreateAsa:
	// The ABI return prefix
	byte 0x151f7c75

	// execute CreateAsa()uint64
	callsub CreateAsa
	itob
	concat
	log
	int 1
	return

// CreateAsa(): AssetID
CreateAsa:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/Moth.algo.ts:36
	// this.OnlyCreator()
	callsub OnlyCreator

	// contracts/Moth.algo.ts:37
	// assert(!this.royaltyPointToken.exists)
	txna Applications 0
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get_ex
	swap
	pop
	!
	assert

	// contracts/Moth.algo.ts:39
	// createAsset = sendAssetCreation({
	//       configAssetName: 'Mathak',
	//       configAssetUnitName: 'MAK',
	//       configAssetTotal: 100000,
	//       configAssetDecimals: 0,
	//       configAssetClawback: this.app.address,
	//       configAssetManager: this.app.address,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/Moth.algo.ts:40
	// configAssetName: 'Mathak'
	byte 0x4d617468616b // "Mathak"
	itxn_field ConfigAssetName

	// contracts/Moth.algo.ts:41
	// configAssetUnitName: 'MAK'
	byte 0x4d414b // "MAK"
	itxn_field ConfigAssetUnitName

	// contracts/Moth.algo.ts:42
	// configAssetTotal: 100000
	int 100000
	itxn_field ConfigAssetTotal

	// contracts/Moth.algo.ts:43
	// configAssetDecimals: 0
	int 0
	itxn_field ConfigAssetDecimals

	// contracts/Moth.algo.ts:44
	// configAssetClawback: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetClawback

	// contracts/Moth.algo.ts:45
	// configAssetManager: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetManager

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury 0 // createAsset: uint64

	// contracts/Moth.algo.ts:48
	// this.royaltyPointToken.value = createAsset
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	frame_dig 0 // createAsset: uint64
	app_global_put

	// contracts/Moth.algo.ts:50
	// return createAsset;
	frame_dig 0 // createAsset: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// OptIn(axfer)bool
*abi_route_OptIn:
	// The ABI return prefix
	byte 0x151f7c75

	// optInTxn: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==

	// argument 0 (optInTxn) for OptIn must be a axfer transaction
	assert

	// execute OptIn(axfer)bool
	callsub OptIn
	byte 0x00
	int 0
	uncover 2
	setbit
	concat
	log
	int 1
	return

// OptIn(optInTxn: AssetTransferTxn): boolean
OptIn:
	proto 1 1

	// contracts/Moth.algo.ts:56
	// verifyAssetTransferTxn(optInTxn, {
	//       sender: this.txn.sender,
	//       xferAsset: this.royaltyPointToken.value,
	//       assetAmount: 0,
	//       assetReceiver: this.txn.sender,
	//     })
	// verify sender
	frame_dig -1 // optInTxn: AssetTransferTxn
	gtxns Sender
	txn Sender
	==

	// transaction verification failed: {"txn":"optInTxn","field":"sender","expected":"this.txn.sender"}
	assert

	// verify xferAsset
	frame_dig -1 // optInTxn: AssetTransferTxn
	gtxns XferAsset
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get
	==

	// transaction verification failed: {"txn":"optInTxn","field":"xferAsset","expected":"this.royaltyPointToken.value"}
	assert

	// verify assetAmount
	frame_dig -1 // optInTxn: AssetTransferTxn
	gtxns AssetAmount
	int 0
	==

	// transaction verification failed: {"txn":"optInTxn","field":"assetAmount","expected":"0"}
	assert

	// verify assetReceiver
	frame_dig -1 // optInTxn: AssetTransferTxn
	gtxns AssetReceiver
	txn Sender
	==

	// transaction verification failed: {"txn":"optInTxn","field":"assetReceiver","expected":"this.txn.sender"}
	assert

	// contracts/Moth.algo.ts:63
	// return this.txn.sender.isOptedInToAsset(this.royaltyPointToken.value);
	txn Sender
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop
	retsub

// CheckOptedIn()bool
*abi_route_CheckOptedIn:
	// The ABI return prefix
	byte 0x151f7c75

	// execute CheckOptedIn()bool
	callsub CheckOptedIn
	byte 0x00
	int 0
	uncover 2
	setbit
	concat
	log
	int 1
	return

// CheckOptedIn(): boolean
CheckOptedIn:
	proto 0 1

	// contracts/Moth.algo.ts:67
	// return this.txn.sender.isOptedInToAsset(this.royaltyPointToken.value);
	txn Sender
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop
	retsub

// Gateway(pay,address,uint64)void
*abi_route_Gateway:
	// amount: uint64
	txna ApplicationArgs 2
	btoi

	// toAddress: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==

	// argument 1 (toAddress) for Gateway must be a address
	assert

	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==

	// argument 2 (payment) for Gateway must be a pay transaction
	assert

	// execute Gateway(pay,address,uint64)void
	callsub Gateway
	int 1
	return

// Gateway(payment: PayTxn, toAddress: Address, amount: uint64): void
Gateway:
	proto 3 0

	// contracts/Moth.algo.ts:71
	// assert(this.royaltyPointToken.exists)
	txna Applications 0
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/Moth.algo.ts:72
	// assert(this.profiles(toAddress).exists)
	frame_dig -2 // toAddress: Address
	box_len
	swap
	pop
	assert

	// contracts/Moth.algo.ts:73
	// this.txn.sender.isOptedInToAsset(this.royaltyPointToken.value)
	txn Sender
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop

	// contracts/Moth.algo.ts:75
	// verifyTxn(payment, {
	//       amount: amount,
	//       receiver: this.app.address,
	//     })
	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	frame_dig -3 // amount: uint64
	==

	// transaction verification failed: {"txn":"payment","field":"amount","expected":"amount"}
	assert

	// verify receiver
	frame_dig -1 // payment: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// transaction verification failed: {"txn":"payment","field":"receiver","expected":"this.app.address"}
	assert

	// contracts/Moth.algo.ts:80
	// sendPayment({
	//       amount: amount,
	//       receiver: toAddress,
	//       sender: this.app.address,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/Moth.algo.ts:81
	// amount: amount
	frame_dig -3 // amount: uint64
	itxn_field Amount

	// contracts/Moth.algo.ts:82
	// receiver: toAddress
	frame_dig -2 // toAddress: Address
	itxn_field Receiver

	// contracts/Moth.algo.ts:83
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/Moth.algo.ts:86
	// sendAssetTransfer({
	//       xferAsset: this.royaltyPointToken.value,
	//       assetAmount: amount / 100,
	//       assetReceiver: this.txn.sender,
	//       sender: this.app.address,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/Moth.algo.ts:87
	// xferAsset: this.royaltyPointToken.value
	byte 0x726f79616c7479506f696e74546f6b656e // "royaltyPointToken"
	app_global_get
	itxn_field XferAsset

	// contracts/Moth.algo.ts:88
	// assetAmount: amount / 100
	frame_dig -3 // amount: uint64
	int 100
	/
	itxn_field AssetAmount

	// contracts/Moth.algo.ts:89
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// contracts/Moth.algo.ts:90
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// GetMBR(string,string,string,string,bool,uint64)uint64
*abi_route_GetMBR:
	// The ABI return prefix
	byte 0x151f7c75

	// loyaltyPercentage: uint64
	txna ApplicationArgs 6
	btoi

	// loyaltyEnabled: bool
	txna ApplicationArgs 5
	dup
	len
	int 1
	==

	// argument 1 (loyaltyEnabled) for GetMBR must be a bool
	assert
	int 0
	getbit

	// url: string
	txna ApplicationArgs 4
	extract 2 0

	// description: string
	txna ApplicationArgs 3
	extract 2 0

	// logo: string
	txna ApplicationArgs 2
	extract 2 0

	// title: string
	txna ApplicationArgs 1
	extract 2 0

	// execute GetMBR(string,string,string,string,bool,uint64)uint64
	callsub GetMBR
	itob
	concat
	log
	int 1
	return

// GetMBR(title: string, logo: string, description: string, url: string, loyaltyEnabled: boolean, loyaltyPercentage: uint64): uint64
GetMBR:
	proto 6 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// *if0_condition
	// contracts/Moth.algo.ts:103
	// this.profiles(this.txn.sender).exists
	txn Sender
	box_len
	swap
	pop
	bz *if0_end

	// *if0_consequent
	// contracts/Moth.algo.ts:104
	// this.profiles(this.app.address).value = this.profiles(this.txn.sender).value
	global CurrentApplicationAddress
	dup
	box_del
	pop
	txn Sender
	box_get

	// box value does not exist: this.profiles(this.txn.sender).value
	assert
	box_put

*if0_end:
	// contracts/Moth.algo.ts:107
	// preAppMBR = this.app.address.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	frame_bury 0 // preAppMBR: uint64

	// contracts/Moth.algo.ts:108
	// this.profiles(this.app.address).value = {
	//       title: title,
	//       logo: logo,
	//       description: description,
	//       url: url,
	//       loyaltyEnabled: loyaltyEnabled,
	//       loyaltyPercentage: loyaltyPercentage,
	//     }
	global CurrentApplicationAddress
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0011 // initial head offset
	frame_dig -1 // title: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -2 // logo: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -3 // description: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -4 // url: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	byte 0x00
	int 0
	frame_dig -5 // loyaltyEnabled: boolean
	setbit
	callsub *process_static_tuple_element
	frame_dig -6 // loyaltyPercentage: uint64
	itob
	callsub *process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// *if1_condition
	// contracts/Moth.algo.ts:117
	// preAppMBR > this.app.address.minBalance
	frame_dig 0 // preAppMBR: uint64
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	>
	bz *if1_end

	// *if1_consequent
	// contracts/Moth.algo.ts:118
	// this.profiles(this.app.address).delete()
	global CurrentApplicationAddress
	box_del

	// contracts/Moth.algo.ts:119
	// return 0;
	int 0
	b *GetMBR*return

*if1_end:
	// contracts/Moth.algo.ts:122
	// Mbr = this.app.address.minBalance - preAppMBR
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	frame_dig 0 // preAppMBR: uint64
	-
	frame_bury 1 // Mbr: uint64

	// contracts/Moth.algo.ts:123
	// this.profiles(this.app.address).delete()
	global CurrentApplicationAddress
	box_del

	// contracts/Moth.algo.ts:124
	// return Mbr;
	frame_dig 1 // Mbr: uint64

*GetMBR*return:
	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

// EditProfile(pay,string,string,string,string,bool,uint64)(string,string,string,string,bool,uint64)
*abi_route_EditProfile:
	// The ABI return prefix
	byte 0x151f7c75

	// loyaltyPercentage: uint64
	txna ApplicationArgs 6
	btoi

	// loyaltyEnabled: bool
	txna ApplicationArgs 5
	dup
	len
	int 1
	==

	// argument 1 (loyaltyEnabled) for EditProfile must be a bool
	assert
	int 0
	getbit

	// url: string
	txna ApplicationArgs 4
	extract 2 0

	// description: string
	txna ApplicationArgs 3
	extract 2 0

	// logo: string
	txna ApplicationArgs 2
	extract 2 0

	// title: string
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==

	// argument 6 (boxMBRPayment) for EditProfile must be a pay transaction
	assert

	// execute EditProfile(pay,string,string,string,string,bool,uint64)(string,string,string,string,bool,uint64)
	callsub EditProfile
	concat
	log
	int 1
	return

// EditProfile(boxMBRPayment: PayTxn, title: string, logo: string, description: string, url: string, loyaltyEnabled: boolean, loyaltyPercentage: uint64): profile
EditProfile:
	proto 7 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/Moth.algo.ts:136
	// preAppMBR = this.app.address.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	frame_bury 0 // preAppMBR: uint64

	// contracts/Moth.algo.ts:137
	// this.profiles(this.txn.sender).value = {
	//       title: title,
	//       logo: logo,
	//       description: description,
	//       url: url,
	//       loyaltyEnabled: loyaltyEnabled,
	//       loyaltyPercentage: loyaltyPercentage,
	//     }
	txn Sender
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0011 // initial head offset
	frame_dig -2 // title: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -3 // logo: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -4 // description: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -5 // url: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	byte 0x00
	int 0
	frame_dig -6 // loyaltyEnabled: boolean
	setbit
	callsub *process_static_tuple_element
	frame_dig -7 // loyaltyPercentage: uint64
	itob
	callsub *process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// *if2_condition
	// contracts/Moth.algo.ts:146
	// preAppMBR >= this.app.address.minBalance
	frame_dig 0 // preAppMBR: uint64
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	>=
	bz *if2_else

	// *if2_consequent
	// contracts/Moth.algo.ts:147
	// sendPayment({
	//         amount: preAppMBR - this.app.address.minBalance,
	//         receiver: this.txn.sender,
	//         sender: this.app.address,
	//       })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/Moth.algo.ts:148
	// amount: preAppMBR - this.app.address.minBalance
	frame_dig 0 // preAppMBR: uint64
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	-
	itxn_field Amount

	// contracts/Moth.algo.ts:149
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver

	// contracts/Moth.algo.ts:150
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	b *if2_end

*if2_else:
	// contracts/Moth.algo.ts:153
	// verifyTxn(boxMBRPayment, {
	//         receiver: this.app.address,
	//         amount: this.app.address.minBalance - preAppMBR,
	//       })
	// verify receiver
	frame_dig -1 // boxMBRPayment: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// transaction verification failed: {"txn":"boxMBRPayment","field":"receiver","expected":"this.app.address"}
	assert

	// verify amount
	frame_dig -1 // boxMBRPayment: PayTxn
	gtxns Amount
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	frame_dig 0 // preAppMBR: uint64
	-
	==

	// transaction verification failed: {"txn":"boxMBRPayment","field":"amount","expected":"this.app.address.minBalance - preAppMBR"}
	assert

*if2_end:
	// contracts/Moth.algo.ts:159
	// return this.profiles(this.txn.sender).value;
	txn Sender
	box_get

	// box value does not exist: this.profiles(this.txn.sender).value
	assert

	// set the subroutine return value
	frame_bury 0
	retsub

*create_NoOp:
	method "createApplication(uint64,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	method "CreateAsa()uint64"
	method "OptIn(axfer)bool"
	method "CheckOptedIn()bool"
	method "Gateway(pay,address,uint64)void"
	method "GetMBR(string,string,string,string,bool,uint64)uint64"
	method "EditProfile(pay,string,string,string,string,bool,uint64)(string,string,string,string,bool,uint64)"
	txna ApplicationArgs 0
	match *abi_route_CreateAsa *abi_route_OptIn *abi_route_CheckOptedIn *abi_route_Gateway *abi_route_GetMBR *abi_route_EditProfile

	// this contract does not implement the given ABI method for call NoOp
	err

*process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

*process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub